{#
/**
 * @file
 * Theme override to display a view of unformatted rows.
 *
 * Available variables:
 * - title: The title of this group of rows. May be empty.
 * - rows: A list of the view's row items.
 *   - attributes: The row's HTML attributes.
 *   - content: The row's content.
 * - view: The view object.
 * - default_row_class: A flag indicating whether default classes should be
 *   used on rows.
 *
 * @see template_preprocess_views_view_unformatted()
 */
#}

{% set originCoords = node.field_route_coords_origin.0.value|raw|split(',') %}
{% set destinyCoords = node.field_route_coords_destiny.0.value|raw|split(',') %}
{% set lat1 = originCoords[0] %}
{% set lon1 = originCoords[1] %}
{% set lat2 = destinyCoords[0] %}
{% set lon2 = destinyCoords[1] %}

{% set origin = node.field_route_city_origin.0.value|raw %}
{% set destiny = node.field_route_city_destiny.0.value|raw %}
{% if origin == 'Cali, CO' and destiny == 'Neiva, CO' %}
  {% set waypntT = 1 %}
  {% set waypnt = '4.422684, -75.234220' %}
{% endif %}
{% if origin == 'Medellín, CO' and destiny == 'Neiva, CO' %}
  {% set waypntT = 1 %}
  {% set waypnt = '4.390742, -75.150949' %}
{% endif %}
{% if origin == 'Medellín, CO' and destiny == 'Florencia, CO' %}
  {% set waypntT = 1 %}
  {% set waypnt = '4.390742, -75.150949' %}
{% endif %}
{% if origin == 'Cúcuta, CO' and destiny == 'Medellín, CO' %}
  {% set waypntT = 1 %}
  {% set waypnt = '5.842734, -74.576094' %}
{% endif %}
{% if origin == 'Bogotá, CO' and destiny == 'Manizales, CO' %}
  {% set waypntT = 1 %}
  {% set waypnt = '5.076596, -74.608081' %}
{% endif %}
{% if origin == 'Bogotá, CO' and destiny == 'Medellín, CO' %}
  {% set waypntT = 1 %}
  {% set waypnt = '5.079354, -74.608745' %}
{% endif %}
{% if origin == 'Bogotá, CO' and destiny == 'La Dorada, CO' %}
  {% set waypntT = 1 %}
  {% set waypnt = '5.079354, -74.608745' %}
{% endif %}
<section class="wrapper bg_bolivariano">
    <div class="wrapper__top bg-image">
        <img src="/sites/default/files/inline-images/routes_0.jpg" alt="" class="">
        <div class="wrapper__topwrap">
            <h2 class="wrapper__title wrapper__title--cities">Nuestras rutas</h2>
        </div>
    </div>
</section>
<section class="wrapper__100">
    <div id="rutas" class="">
        <div class="buscador container-fluid">
            <div class="row">
              <div class="col col-4 col-md-6 text-center big_text">{{ node.field_route_title.0.value|raw }}</div>
              <div class="col-sm-3 col-md-2">
                  <p>Origen</p>
                  <select id="origin_filter">
                      <option value="0">-Todas-</option>
                  {% set newCities = [] %}
                  {% for city in cities|sort %}
                      {% if city.0.0.0.value not in newCities %}
                      {% set cityOrigin = city.0.0.0.value|raw|split(',') %}
                          <option value="{{ cityOrigin[0]|lower }}">{{ cityOrigin[0] }}</option>
                      {% set newCities = newCities|merge([city.0.0.0.value]) %}
                      {% endif %}    
                  {% endfor %}
                  </select>
              </div>
              <div class="col-sm-3 col-md-2 destino">
                  <p>Destino</p>
                  <select id="destiny">
                      <option value="0">-Todas-</option>
                  {% set newCities = [] %}
                  {% for city in cities|sort %}
                      {% if city.1.1.0.value not in newCities %}
                      {% set cityDestiny = city.1.1.0.value|raw|split(',') %}
                          <option value="{{ cityDestiny[0]|lower }}">{{ cityDestiny[0] }}</option>
                      {% set newCities = newCities|merge([city.1.1.0.value]) %}
                      {% endif %}    
                  {% endfor %}
                  </select>
                  <div id="destiny_filter_select" style="display: none;"></div>
              </div>
              <div class="col col-sm-3 col-md-2 text-center big_text"><button id="filter_routes" class="btn btn--secondary" style="font-size: 18px;">Filtrar</button></div>
          </div>
        </div>
        <div class="">
            <div id="map" class="map_route" style="height: 800px;"></div>
        </div>
    </div> 
</section>
<div class="w-100">
    <div class="container-fluid bg-light-blue">
        {% set count = node.field_route_transits|length %}
        {% if count <= 3 %}
        {% set count = (count*2) %}
        <div class="container">
            <div class="row pt-4">
                <div class="col-lg-6 pt-6">
                    <h3>Ruta: {{ node.field_route_title.0.value|raw }}</h3>
                    <ul class="mt-4">
                        <li><b>Distancia: </b>{{ node.field_route_distance.0.value|raw }}</li>
                        <li><b>Tiempo estimado: </b>{{ node.field_route_time_estimated.0.value|raw }}</li>
                        <li><b>Estado de la vía: </b>{{ node.field_route_status.0.value|raw }}</li>
                    </ul>
                    <h6 style="padding-bottom: 20px;"><img src="{{ base_path }}/{{ active_theme_path() }}/images/misc/pin_near.png"> Agencias cercanas a la ruta enunciada. <br> No significa parada en la agencia.</h6>
                </div>

                <div class="col-lg-{{ count }} pt-4">
                    <div id="timeline-rutas">
                        <ul class="d-flex w-100 justify-content-between">
                            {% for key, item in node.field_route_transits if key|first != '#' %}
                            <li>
                                <span></span>
                                <div class="info">
                                   {{ item.value|raw }}
                                </div>
                            </li>
                            {% endfor %}
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        {% elseif count > 3 and count <= 4 %}
        {% set count = (count*2) %}
        <div class="container">
            <div class="row pt-4">
                <div class="col-lg-4 pt-4">
                    <h3>Ruta: {{ node.field_route_title.0.value|raw }}</h3>
                    <ul class="mt-4">
                        <li><b>Distancia: </b>{{ node.field_route_distance.0.value|raw }}</li>
                        <li><b>Tiempo estimado: </b>{{ node.field_route_time_estimated.0.value|raw }}</li>
                        <li><b>Estado de la vía: </b>{{ node.field_route_status.0.value|raw }}</li>
                    </ul>
                    <h6><img src="{{ base_path }}/{{ active_theme_path() }}/images/misc/pin_near.png"> Agencias cercanas a la ruta enunciada. <br> No significa parada en la agencia.</h6>
                </div>

                <div class="col-lg-{{ count }} pt-4">
                    <div id="timeline-rutas">
                        <ul class="d-flex w-100 justify-content-between">
                            {% for key, item in node.field_route_transits if key|first != '#' %}
                            <li>
                                <span></span>
                                <div class="info">
                                   {{ item.value|raw }}
                                </div>
                            </li>
                            {% endfor %}
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        {% elseif count > 4 and count < 6 %}
        {% set count = 8 %}
        <div class="container">
            <div class="row pt-4">
                <div class="col-lg-4 pt-4">
                    <h3>Ruta: {{ node.field_route_title.0.value|raw }}</h3>
                    <ul class="mt-4">
                        <li><b>Distancia: </b>{{ node.field_route_distance.0.value|raw }}</li>
                        <li><b>Tiempo estimado: </b>{{ node.field_route_time_estimated.0.value|raw }}</li>
                        <li><b>Estado de la vía: </b>{{ node.field_route_status.0.value|raw }}</li>
                    </ul>
                    <h6><img src="{{ base_path }}/{{ active_theme_path() }}/images/misc/pin_near.png"> Agencias cercanas a la ruta enunciada. <br> No significa parada en la agencia.</h6>
                </div>

                <div class="col-lg-{{ count }} pt-4">
                    <div id="timeline-rutas">
                        <ul class="d-flex w-100 justify-content-between">
                            {% for key, item in node.field_route_transits if key|first != '#' %}
                            <li>
                                <span></span>
                                <div class="info">
                                   {{ item.value|raw }}
                                </div>
                            </li>
                            {% endfor %}
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        {% else %}
        {% set count = count %}
            <div class="row pt-4">
                <div class="col-lg-1 pt-4"></div>
                <div class="col-lg-3 pt-4">
                    <h3>Ruta: {{ node.field_route_title.0.value|raw }}</h3>
                    <ul class="mt-4">
                        <li><b>Distancia: </b>{{ node.field_route_distance.0.value|raw }}</li>
                        <li><b>Tiempo estimado: </b>{{ node.field_route_time_estimated.0.value|raw }}</li>
                        <li><b>Estado de la vía: </b>{{ node.field_route_status.0.value|raw }}</li>
                    </ul>
                    <h6><img src="{{ base_path }}/{{ active_theme_path() }}/images/misc/pin_near.png"> Agencias cercanas a la ruta enunciada. <br> No significa parada en la agencia.</h6>
                </div>

                <div class="col-lg-{{ count }} pt-4">
                    <div id="timeline-rutas">
                        <ul class="d-flex w-100 justify-content-between">
                            {% for key, item in node.field_route_transits if key|first != '#' %}
                            <li>
                                <span></span>
                                <div class="info">
                                   {{ item.value|raw }}
                                </div>
                            </li>
                            {% endfor %}
                        </ul>
                
                    </div>

                </div>
            </div>
        {% endif %}
    </div>
</div>

<script>

      var map;
      function initMap() {
        map = new google.maps.Map(
            document.getElementById('map'),
            {center: new google.maps.LatLng(4.010614, -75.975973), zoom: 9, disableDefaultUI: true});

        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer({
            suppressMarkers: true,
            polylineOptions: { strokeColor: '#2C3B99' },
            map: map
        });
        displayRoute('{{ origin }}', '{{ destiny }}', directionsService,directionsDisplay);

        var iconBase = '{{ base_path }}/{{ active_theme_path() }}/images/misc/';

        var icons = {
          transit: {
            icon: iconBase + 'pin_near.png'
          },
          stop: {
            icon: iconBase + 'pin_map.png'
          }
        };

        var features = [
          {
            position: new google.maps.LatLng( {{ lat1 }}, {{ lon1 }} ),
            type: 'stop'
          },
          {% for key, item in node.field_route_transit_agency if key|first != '#' %}
            { 
              position: new google.maps.LatLng( {{ item.value|raw }} ),
              type: 'transit'
            },
            {% endfor %}
           {
            position: new google.maps.LatLng( {{ lat2 }}, {{ lon2 }} ),
            type: 'stop'
          }
        ];

        // Create markers.
        for (var i = 0; i < features.length; i++) {
          var marker = new google.maps.Marker({
            position: features[i].position,
            icon: icons[features[i].type].icon,
            map: map
          });
        };

      }

      function displayRoute(origin, destination, service, display) {
          service.route({
            origin:  new google.maps.LatLng( {{ lat1 }}, {{ lon1 }} ),
            destination:  new google.maps.LatLng( {{ lat2 }}, {{ lon2 }} ),
            {% if waypntT == 1 %}
              waypoints: [{location: new google.maps.LatLng( {{ waypnt }} ), stopover: false}],
            {% endif %}
            travelMode: 'DRIVING'//,
            //avoidTolls: true
          }, function(response, status) {
            if (status === 'OK') {
              display.setDirections(response);
            } else {
              alert('Could not display directions due to: ' + status);
            }
          });
        }


</script>
<!-- Replace the value of the key parameter with your own API key. -->
<script async defer
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAyWmzmaeGyLXQpJmbE_oUHxSwOxdS1Xtk&callback=initMap">
</script>