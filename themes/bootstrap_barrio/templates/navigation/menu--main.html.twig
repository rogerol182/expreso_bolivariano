{#
/**
 * @file
 * Bootstrap Barrio's override to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 *   - in_active_trail: TRUE if the link is in the active trail.
 */
#}
{% import _self as menus %}

{#
  We call a macro which calls itself to render the full tree.
  @see http://twig.sensiolabs.org/doc/tags/macro.html
#}
<button class="navbar-toggler header__btntoggler" type="button" data-toggle="collapse" data-target="#navbarNavDropdown">
  <span class="navbar-toggler-icon header__toggler"></span>
  <span class="navbar-toggler-icon header__toggler"></span>
  <span class="navbar-toggler-icon header__toggler"></span>
</button>
{{ menus.menu_links(items, attributes, 0) }}

{% macro menu_links(items, attributes, menu_level) %}
  {% import _self as menus %}
  {% if items %}
    {% if menu_level == 0 %}
      <!--<ul{{ attributes.addClass('nav navbar-nav') }}>-->
      <div class="collapse navbar-collapse header__items" id="navbarNavDropdown">
      <ul class="navbar-nav">
    {% else %}
      <ul class="dropdown-menu">
    {% endif %}
    {% for item in items %}
      {%
        set classes = [
          menu_level ? 'dropdown-item' : 'header__item hvr-grow',
          item.is_expanded ? 'menu-item--expanded',
          item.is_collapsed ? 'menu-item--collapsed',
        ]
      %}

      <li {{ item.attributes.addClass(classes) }}>
      
        {%
          set link_classes = [
            not menu_level ? 'nav-link header__link',
            item.below ? 'dropdown-toggle',
            item.url.getOption('attributes').class ? item.url.getOption('attributes').class,
          ]
        %}
        {% if item.below %}
          {{ link(item.title, item.url, {'class': link_classes, 'data-toggle': 'dropdown', 'aria-expanded': 'false', 'aria-haspopup': 'true' }) }}
          {{ menus.menu_links(item.below, attributes, menu_level + 1) }}
        {% else %}
          {{ link(item.title, item.url, {'class': link_classes}) }}
        {% endif %}
        
         <span class="sr-only">(current)</span>
        
      </li>
    {% endfor %}
    </ul>
  
  {% endif %}
{% endmacro %}
